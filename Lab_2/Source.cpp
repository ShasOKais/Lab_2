#include <iostream>

using namespace std;
//-------------------------------------------------------------------
/*
  Спецификаторы доступа:
  private:
	  список свойств и методов для использования внутри класса
  public:
	  список методов доступных другим функциям и объектам программы
  protected:
	  список средств, доступных при наследовании
*/
//-------------------------------------------------------------------
class Darkness { // имя класса
public: // спецификатор доступа
	int x, y; // атрибуты
	Darkness() { // конструктор
		/*
		  метод класса, который предназначен для инициализации
		  элементов класса некоторыми начальными значениями
		*/
		cout << "Darkness()\n"; // отладочный вывод
		x = 0; // начальные значения
		y = 0;
	}
	Darkness(int x, int y) { // конструктор c параментрами
		cout << "Darkness(int x, int y)\n";
		// -> обращение к члену структуры
		this->x = x; // this - указатель на текущий объект данного класса
		this->y = y; // через this можно обращаться внутри класса к любым его членам
	}
	Darkness(const Darkness& here) { // копирующий конструктор
		// Переносит все свойства из объекта которое передали
		cout << "Darkness(const Darkness &here)\n";
		x = here.x;
		y = here.y;
	}
	~Darkness() { // деструктор
		/*
		  метод класса, служащий для
		  деинициализации объекта (освобождение памяти)
		*/
		cout << "~Darkness() " << x << " " << y << endl;
	}
};

int main() {
	{
		Darkness Ford; // вызов конструктора
		Darkness FordStatic(10, 20); // статический объект
		Darkness FordCopy(FordStatic); // копирующий конструктор
	}
	return 0;
}